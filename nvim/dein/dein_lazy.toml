[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'deoplete-plugins/deoplete-clang'
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-6.0/lib/libclang.so.1'
    let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertcharPre'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#auto_complete_delay_start_length = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_ignore_case = 0
    let g:deoplete#enable_refresh_always = 0
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#file#enable_buffer_path = 1
    let g:deoplete#max_list = 10000


    inoremap <expr><TAB> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
hook_source = '''
    " Plugin key-mappings.
    imap <C-k>          <Plug>(neosnippet_expand_or_jump)
    smap <C-k>          <Plug>(neosnippet_expand_or_jump)
    xmap <C-k>          <Plug>(neosnippet_expand_target)
    
    " SuperTab
    imap <expr><TAB>
        \ pumvisible() ? "\<C-n>" :
        \neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
        \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    " For conceal markers.
    if has('conceal')
        set conceallevel=1 concealcursor=niv
    endif
'''

[[plugins]]
repo = 'twitvim/twitvim'
hook_source = '''
    let twitvim_enable_python3 = 1
    let twitvim_browser_cmd = 'firefox'
'''
